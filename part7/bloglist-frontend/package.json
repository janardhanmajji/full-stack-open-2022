{
  "name": "bloglist-frontend",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^1.2.27",
    "@fortawesome/free-solid-svg-icons": "^5.12.1",
    "@fortawesome/react-fontawesome": "^0.1.8",
    "@hot-loader/react-dom": "^16.13.0",
    "@loadable/component": "^5.12.0",
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.4.0",
    "axios": "^0.19.2",
    "clean-webpack-plugin": "^3.0.0",
    "connected-react-router": "^6.7.0",
    "core-js": "3",
    "history": "^4.10.1",
    "lodash.times": "^4.3.2",
    "prop-types": "^15.7.2",
    "react": "^16.12.0",
    "react-dom": "^16.12.0",
    "react-hot-loader": "^4.12.20",
    "react-redux": "^7.2.0",
    "react-router-dom": "^5.1.2",
    "react-uid": "^2.2.0",
    "redux": "^4.0.5",
    "redux-devtools-extension": "^2.13.8",
    "redux-thunk": "^2.3.0",
    "regenerator-runtime": "^0.13.5"
  },
  "devDependencies": {
    "@babel/core": "^7.8.6",
    "@babel/polyfill": "^7.8.3",
    "@babel/preset-env": "^7.8.6",
    "@babel/preset-react": "^7.8.3",
    "@types/jest": "^25.1.3",
    "@typescript-eslint/eslint-plugin": "^2.10.0",
    "@typescript-eslint/parser": "^2.10.0",
    "@welldone-software/why-did-you-render": "^4.0.4",
    "axios-mock-adapter": "^1.17.0",
    "babel-eslint": "10.0.3",
    "babel-jest": "^24.9.0",
    "babel-loader": "^8.0.6",
    "compression-webpack-plugin": "^3.1.0",
    "cross-env": "^7.0.0",
    "css-loader": "^3.4.2",
    "cssnano": "^4.1.10",
    "cypress": "^4.1.0",
    "deep-freeze": "^0.0.1",
    "eslint": "^6.6.0",
    "eslint-config-prettier": "^6.10.0",
    "eslint-config-react-app": "^5.2.0",
    "eslint-plugin-cypress": "^2.10.3",
    "eslint-plugin-flowtype": "4.6.0",
    "eslint-plugin-import": "2.20.0",
    "eslint-plugin-jest": "^23.7.0",
    "eslint-plugin-jsx-a11y": "6.2.3",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-react": "7.18.0",
    "eslint-plugin-react-hooks": "^1.6.1",
    "file-loader": "^5.0.2",
    "html-webpack-plugin": "^3.2.0",
    "jest": "24.9.0",
    "jest-environment-jsdom-fourteen": "1.0.1",
    "mini-css-extract-plugin": "^0.9.0",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "prettier": "^1.19.1",
    "redux-mock-store": "^1.5.4",
    "style-loader": "^1.1.3",
    "terser-webpack-plugin": "^2.3.5",
    "webpack": "^4.42.0",
    "webpack-bundle-analyzer": "^3.6.1",
    "webpack-cli": "^3.3.11",
    "webpack-dev-server": "^3.10.3"
  },
  "scripts": {
    "start": "webpack-dev-server --mode=development",
    "start:test": "cross-env NODE_ENV=test webpack-dev-server --mode=development",
    "build": "cross-env NODE_ENV=production webpack --mode=production",
    "build:analyze": "npm run build -- --analyze",
    "test": "set CI=true && jest --verbose",
    "test:coverage": "npm run test -- --coverage",
    "cypress:open": "cypress open",
    "lint": "eslint ."
  },
  "jest": {
    "roots": [
      "<rootDir>/src"
    ],
    "collectCoverageFrom": [
      "!src/services/*.js"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/__mocks__/styleMock.js"
    },
    "setupFilesAfterEnv": [
      "<rootDir>/src/setupTests.js"
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}",
      "<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}"
    ],
    "testEnvironment": "jest-environment-jsdom-fourteen",
    "transform": {
      "^.+\\.(js|jsx|ts|tsx)$": "<rootDir>/node_modules/babel-jest"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$",
      "^.+\\.module\\.(css|sass|scss)$"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "modules": false,
          "useBuiltIns": "usage",
          "corejs": 3
        }
      ],
      "@babel/preset-react"
    ],
    "env": {
      "test": {
        "presets": [
          [
            "@babel/preset-env",
            {
              "useBuiltIns": "usage",
              "corejs": 3
            }
          ],
          "@babel/preset-react"
        ]
      }
    }
  }
}
